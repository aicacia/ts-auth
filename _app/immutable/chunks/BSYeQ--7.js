import{e as c,u as f,g as l,b as u,h as a}from"./9Y3Zi9LS.js";import{g as m}from"./uhMkHT6K.js";import{b as s}from"./Bluxw1Nt.js";import{p as n}from"./BdKRVwFY.js";import{l as d,a as g,b as h}from"./Dyl6cX5U.js";import{t as A}from"./B4hHVZ4A.js";const e=d("applicationId",null);let o=u(null),r=u(null);c(()=>{f(()=>{e.value&&l(r)?.id!==e.value&&g.connected&&A.validToken&&(l(o)||a(o,h.getApplicationById(e.value).then(t=>{a(r,t,!0)}).finally(()=>{a(o,null)}),!0))})});const k={get current(){return l(r)}};async function P(t){a(r,t,!0),e.value=t.id;const p=`${s}/applications/${n.params.applicationId}`;if(n.url.pathname.startsWith(p)){const i=new URL(n.url);i.pathname=i.pathname.replace(p,`${s}/applications/${t.id}`),await m(i,{invalidateAll:!0})}}export{k as a,P as s};
