import{e as c,u as f,g as p,b as u,h as e}from"./wkzzbBdv.js";import{g as m}from"./C2GVKlbb.js";import{b as s}from"./BiGx9tMp.js";import{p as o}from"./geKtmM77.js";import{l as d,a as g}from"./BIi6zqi6.js";import{a as h}from"./D5kayNry.js";import{t as A}from"./Buo9Rh-V.js";const r=d("applicationId",null);let l=u(null),i=u(null);c(()=>{f(()=>{var t;r.value&&((t=p(i))==null?void 0:t.id)!==r.value&&g.connected&&A.validToken&&(p(l)||e(l,h.getApplicationById(r.value).then(a=>{e(i,a,!0)}).finally(()=>{e(l,null)}),!0))})});const P={get current(){return p(i)}};async function S(t){e(i,t,!0),r.value=t.id;const a=`${s}/applications/${o.params.applicationId}`;if(o.url.pathname.startsWith(a)){const n=new URL(o.url);n.pathname=n.pathname.replace(a,`${s}/applications/${t.id}`),await m(n,{invalidateAll:!0})}}export{P as a,S as s};
