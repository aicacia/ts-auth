function i(){}const y=t=>t;function a(t,n){for(const e in n)t[e]=n[e];return t}function _(t){return t()}function b(){return Object.create(null)}function g(t){t.forEach(_)}function d(t){return typeof t=="function"}function p(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}function h(t,n){return t!=t?n==n:t!==n}function x(t){return Object.keys(t).length===0}function f(t,...n){if(t==null){for(const r of n)r(void 0);return i}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function m(t){let n;return f(t,e=>n=e)(),n}function j(t,n,e){t.$$.on_destroy.push(f(n,e))}function k(t,n,e,r){if(t){const s=l(t,n,e,r);return t[0](s)}}function l(t,n,e,r){return t[1]&&r?a(e.ctx.slice(),t[1](r(n))):e.ctx}function q(t,n,e,r){if(t[2]&&r){const s=t[2](r(e));if(n.dirty===void 0)return s;if(typeof s=="object"){const u=[],c=Math.max(n.dirty.length,s.length);for(let o=0;o<c;o+=1)u[o]=n.dirty[o]|s[o];return u}return n.dirty|s}return n.dirty}function O(t,n,e,r,s,u){if(s){const c=l(n,e,r,u);t.p(c,s)}}function w(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let r=0;r<e;r++)n[r]=-1;return n}return-1}function E(t){const n={};for(const e in t)e[0]!=="$"&&(n[e]=t[e]);return n}function F(t,n){const e={};n=new Set(n);for(const r in t)!n.has(r)&&r[0]!=="$"&&(e[r]=t[r]);return e}function M(t){return t&&d(t.destroy)?t.destroy:i}function S(t){const n=typeof t=="string"&&t.match(/^\s*(-?[\d.]+)([^\s]*)\s*$/);return n?[parseFloat(n[1]),n[2]||"px"]:[t,"px"]}export{S as a,d as b,a as c,k as d,E as e,w as f,m as g,q as h,y as i,h as j,j as k,M as l,F as m,i as n,b as o,x as p,_ as q,g as r,p as s,f as t,O as u};
