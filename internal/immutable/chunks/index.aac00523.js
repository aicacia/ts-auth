var _=Object.defineProperty;var S=(t,e,n)=>e in t?_(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var d=(t,e,n)=>(S(t,typeof e!="symbol"?e+"":e,n),n);const A="http://localhost".replace(/\/+$/,"");class R{constructor(e={}){this.configuration=e}set config(e){this.configuration=e}get basePath(){return this.configuration.basePath!=null?this.configuration.basePath:A}get fetchApi(){return this.configuration.fetchApi}get middleware(){return this.configuration.middleware||[]}get queryParamsStringify(){return this.configuration.queryParamsStringify||q}get username(){return this.configuration.username}get password(){return this.configuration.password}get apiKey(){const e=this.configuration.apiKey;if(e)return typeof e=="function"?e:()=>e}get accessToken(){const e=this.configuration.accessToken;if(e)return typeof e=="function"?e:async()=>e}get headers(){return this.configuration.headers}get credentials(){return this.configuration.credentials}}const E=new R,f=class f{constructor(e=E){d(this,"middleware");d(this,"fetchApi",async(e,n)=>{let r={url:e,init:n};for(const s of this.middleware)s.pre&&(r=await s.pre({fetch:this.fetchApi,...r})||r);let i;try{i=await(this.configuration.fetchApi||fetch)(r.url,r.init)}catch(s){for(const a of this.middleware)a.onError&&(i=await a.onError({fetch:this.fetchApi,url:r.url,init:r.init,error:s,response:i?i.clone():void 0})||i);if(i===void 0)throw s instanceof Error?new b(s,"The request failed and the interceptors did not return an alternative response"):s}for(const s of this.middleware)s.post&&(i=await s.post({fetch:this.fetchApi,url:r.url,init:r.init,response:i.clone()})||i);return i});this.configuration=e,this.middleware=e.middleware}withMiddleware(...e){const n=this.clone();return n.middleware=n.middleware.concat(...e),n}withPreMiddleware(...e){const n=e.map(r=>({pre:r}));return this.withMiddleware(...n)}withPostMiddleware(...e){const n=e.map(r=>({post:r}));return this.withMiddleware(...n)}isJsonMime(e){return e?f.jsonRegex.test(e):!1}async request(e,n){const{url:r,init:i}=await this.createFetchParams(e,n),s=await this.fetchApi(r,i);if(s&&s.status>=200&&s.status<300)return s;throw new O(s,"Response returned an error code")}async createFetchParams(e,n){let r=this.configuration.basePath+e.path;e.query!==void 0&&Object.keys(e.query).length!==0&&(r+="?"+this.configuration.queryParamsStringify(e.query));const i=Object.assign({},this.configuration.headers,e.headers);Object.keys(i).forEach(y=>i[y]===void 0?delete i[y]:{});const s=typeof n=="function"?n:async()=>n,a={method:e.method,headers:i,body:e.body,credentials:this.configuration.credentials},o={...a,...await s({init:a,context:e})};let m;v(o.body)||o.body instanceof URLSearchParams||I(o.body)?m=o.body:this.isJsonMime(i["Content-Type"])?m=JSON.stringify(o.body):m=o.body;const k={...o,body:m};return{url:r,init:k}}clone(){const e=this.constructor,n=new e(this.configuration);return n.middleware=this.middleware.slice(),n}};d(f,"jsonRegex",new RegExp("^(:?application/json|[^;/ 	]+/[^;/ 	]+[+]json)[ 	]*(:?;.*)?$","i"));let l=f;function I(t){return typeof Blob<"u"&&t instanceof Blob}function v(t){return typeof FormData<"u"&&t instanceof FormData}class O extends Error{constructor(n,r){super(r);d(this,"name","ResponseError");this.response=n}}class b extends Error{constructor(n,r){super(r);d(this,"name","FetchError");this.cause=n}}class u extends Error{constructor(n,r){super(r);d(this,"name","RequiredError");this.field=n}}function C(t,e){const n=t[e];return n!=null}function q(t,e=""){return Object.keys(t).map(n=>P(n,t[n],e)).filter(n=>n.length>0).join("&")}function P(t,e,n=""){const r=n+(n.length?`[${t}]`:t);if(e instanceof Array){const i=e.map(s=>encodeURIComponent(String(s))).join(`&${encodeURIComponent(r)}=`);return`${encodeURIComponent(r)}=${i}`}if(e instanceof Set){const i=Array.from(e);return P(t,i,n)}return e instanceof Date?`${encodeURIComponent(r)}=${encodeURIComponent(e.toISOString())}`:e instanceof Object?q(e,r):`${encodeURIComponent(r)}=${encodeURIComponent(String(e))}`}class c{constructor(e,n=r=>r){this.raw=e,this.transformer=n}async value(){return this.transformer(await this.raw.json())}}class h{constructor(e){this.raw=e}async value(){}}class w{constructor(e){this.raw=e}async value(){return await this.raw.text()}}function T(t){return J(t)}function J(t,e){return t==null?t:{created_at:new Date(t.created_at),id:t.id,name:t.name,updated_at:new Date(t.updated_at),uri:t.uri}}function $(t){if(t!==void 0)return t===null?null:{username:t.username}}function N(t){if(t!==void 0)return t===null?null:{email:t.email}}function g(t){return z(t)}function z(t,e){return t==null?t:{confirmed:t.confirmed,created_at:new Date(t.created_at),email:t.email,id:t.id,updated_at:new Date(t.updated_at)}}function F(t){return W(t)}function W(t,e){return t==null?t:{db:t.db}}function D(t){return M(t)}function M(t,e){return t==null?t:{data:t.data.map(T),has_more:t.has_more}}function U(t){return B(t)}function B(t,e){return t==null?t:{created_at:new Date(t.created_at),email:C(t,"email")?g(t.email):void 0,emails:t.emails.map(g),id:t.id,permissions:t.permissions,updated_at:new Date(t.updated_at),username:t.username}}function x(t){return G(t)}function G(t,e){return t==null?t:{data:t.data.map(U),has_more:t.has_more}}function H(t){if(t!==void 0)return t===null?null:{application_id:t.application_id,email:t.email}}function L(t){if(t!==void 0)return t===null?null:{application_id:t.application_id,password:t.password,password_confirmation:t.password_confirmation,reset_password_token:t.reset_password_token}}function V(t){if(t!==void 0)return t===null?null:{password:t.password,password_confirmation:t.password_confirmation}}function K(t){if(t!==void 0)return t===null?null:{application_id:t.application_id,password:t.password,username_or_email:t.username_or_email}}function Q(t){return X(t)}function X(t,e){return t==null?t:{enabled:t.enabled,password:t.password}}function Y(t){if(t!==void 0)return t===null?null:{application_id:t.application_id,email:t.email,password:t.password,password_confirmation:t.password_confirmation,username:t.username}}function Z(t){return j(t)}function j(t,e){return t==null?t:{version:t.version}}class ee extends l{async indexRaw(e){const n={},r={};if(this.configuration&&this.configuration.accessToken){const s=this.configuration.accessToken,a=await s("Authorization",[]);a&&(r.Authorization=`Bearer ${a}`)}const i=await this.request({path:"/applications",method:"GET",headers:r,query:n},e);return new c(i,s=>D(s))}async index(e){return await(await this.indexRaw(e)).value()}}class te extends l{async confirmEmailRaw(e,n){if(e.confirmationToken===null||e.confirmationToken===void 0)throw new u("confirmationToken","Required parameter requestParameters.confirmationToken was null or undefined when calling confirmEmail.");const r={},i={},s=await this.request({path:"/auth/confirm-email/{confirmation_token}".replace("{confirmation_token}",encodeURIComponent(String(e.confirmationToken))),method:"PUT",headers:i,query:r},n);return new h(s)}async confirmEmail(e,n){await this.confirmEmailRaw({confirmationToken:e},n)}async requestResetPasswordRaw(e,n){if(e.requestResetPasswordRequest===null||e.requestResetPasswordRequest===void 0)throw new u("requestResetPasswordRequest","Required parameter requestParameters.requestResetPasswordRequest was null or undefined when calling requestResetPassword.");const r={},i={};i["Content-Type"]="application/json";const s=await this.request({path:"/auth/request-reset-password",method:"POST",headers:i,query:r,body:H(e.requestResetPasswordRequest)},n);return new h(s)}async requestResetPassword(e,n){await this.requestResetPasswordRaw({requestResetPasswordRequest:e},n)}async resetPasswordWithTokenRaw(e,n){if(e.resetPasswordRequest===null||e.resetPasswordRequest===void 0)throw new u("resetPasswordRequest","Required parameter requestParameters.resetPasswordRequest was null or undefined when calling resetPasswordWithToken.");const r={},i={};i["Content-Type"]="application/json";const s=await this.request({path:"/auth/reset-password",method:"POST",headers:i,query:r,body:L(e.resetPasswordRequest)},n);return this.isJsonMime(s.headers.get("content-type"))?new c(s):new w(s)}async resetPasswordWithToken(e,n){return await(await this.resetPasswordWithTokenRaw({resetPasswordRequest:e},n)).value()}async signInWithPasswordRaw(e,n){if(e.signInWithPasswordRequest===null||e.signInWithPasswordRequest===void 0)throw new u("signInWithPasswordRequest","Required parameter requestParameters.signInWithPasswordRequest was null or undefined when calling signInWithPassword.");const r={},i={};i["Content-Type"]="application/json";const s=await this.request({path:"/auth/sign-in/password",method:"POST",headers:i,query:r,body:K(e.signInWithPasswordRequest)},n);return this.isJsonMime(s.headers.get("content-type"))?new c(s):new w(s)}async signInWithPassword(e,n){return await(await this.signInWithPasswordRaw({signInWithPasswordRequest:e},n)).value()}async signUpMethodsRaw(e,n){if(e.applicationId===null||e.applicationId===void 0)throw new u("applicationId","Required parameter requestParameters.applicationId was null or undefined when calling signUpMethods.");const r={},i={};if(this.configuration&&this.configuration.accessToken){const a=this.configuration.accessToken,o=await a("Authorization",[]);o&&(i.Authorization=`Bearer ${o}`)}const s=await this.request({path:"/auth/sign-up-methods/{application_id}".replace("{application_id}",encodeURIComponent(String(e.applicationId))),method:"GET",headers:i,query:r},n);return new c(s,a=>Q(a))}async signUpMethods(e,n){return await(await this.signUpMethodsRaw({applicationId:e},n)).value()}async signUpWithPasswordRaw(e,n){if(e.signUpWithPasswordRequest===null||e.signUpWithPasswordRequest===void 0)throw new u("signUpWithPasswordRequest","Required parameter requestParameters.signUpWithPasswordRequest was null or undefined when calling signUpWithPassword.");const r={},i={};i["Content-Type"]="application/json";const s=await this.request({path:"/auth/sign-up/password",method:"POST",headers:i,query:r,body:Y(e.signUpWithPasswordRequest)},n);return this.isJsonMime(s.headers.get("content-type"))?new c(s):new w(s)}async signUpWithPassword(e,n){return await(await this.signUpWithPasswordRaw({signUpWithPasswordRequest:e},n)).value()}}class ne extends l{async applicationsRaw(e){const n={},r={};if(this.configuration&&this.configuration.accessToken){const s=this.configuration.accessToken,a=await s("Authorization",[]);a&&(r.Authorization=`Bearer ${a}`)}const i=await this.request({path:"/users/applications",method:"GET",headers:r,query:n},e);return new c(i,s=>s.map(T))}async applications(e){return await(await this.applicationsRaw(e)).value()}async changeUsernameRaw(e,n){if(e.changeUsernameRequest===null||e.changeUsernameRequest===void 0)throw new u("changeUsernameRequest","Required parameter requestParameters.changeUsernameRequest was null or undefined when calling changeUsername.");const r={},i={};if(i["Content-Type"]="application/json",this.configuration&&this.configuration.accessToken){const a=this.configuration.accessToken,o=await a("Authorization",[]);o&&(i.Authorization=`Bearer ${o}`)}const s=await this.request({path:"/users/change-username",method:"PUT",headers:i,query:r,body:$(e.changeUsernameRequest)},n);return new h(s)}async changeUsername(e,n){await this.changeUsernameRaw({changeUsernameRequest:e},n)}async createEmailRaw(e,n){if(e.createUserEmailRequest===null||e.createUserEmailRequest===void 0)throw new u("createUserEmailRequest","Required parameter requestParameters.createUserEmailRequest was null or undefined when calling createEmail.");const r={},i={};if(i["Content-Type"]="application/json",this.configuration&&this.configuration.accessToken){const a=this.configuration.accessToken,o=await a("Authorization",[]);o&&(i.Authorization=`Bearer ${o}`)}const s=await this.request({path:"/users/emails",method:"POST",headers:i,query:r,body:N(e.createUserEmailRequest)},n);return new c(s,a=>g(a))}async createEmail(e,n){return await(await this.createEmailRaw({createUserEmailRequest:e},n)).value()}async currentRaw(e){const n={},r={};if(this.configuration&&this.configuration.accessToken){const s=this.configuration.accessToken,a=await s("Authorization",[]);a&&(r.Authorization=`Bearer ${a}`)}const i=await this.request({path:"/users/current",method:"GET",headers:r,query:n},e);return new c(i,s=>U(s))}async current(e){return await(await this.currentRaw(e)).value()}async deleteEmailRaw(e,n){if(e.emailId===null||e.emailId===void 0)throw new u("emailId","Required parameter requestParameters.emailId was null or undefined when calling deleteEmail.");const r={},i={};if(this.configuration&&this.configuration.accessToken){const a=this.configuration.accessToken,o=await a("Authorization",[]);o&&(i.Authorization=`Bearer ${o}`)}const s=await this.request({path:"/users/emails/{email_id}".replace("{email_id}",encodeURIComponent(String(e.emailId))),method:"DELETE",headers:i,query:r},n);return new h(s)}async deleteEmail(e,n){await this.deleteEmailRaw({emailId:e},n)}async refreshTokenRaw(e){const n={},r={};if(this.configuration&&this.configuration.accessToken){const s=this.configuration.accessToken,a=await s("Authorization",[]);a&&(r.Authorization=`Bearer ${a}`)}const i=await this.request({path:"/users/refresh-token",method:"GET",headers:r,query:n},e);return this.isJsonMime(i.headers.get("content-type"))?new c(i):new w(i)}async refreshToken(e){return await(await this.refreshTokenRaw(e)).value()}async resetPasswordRaw(e,n){if(e.resetUserPasswordRequest===null||e.resetUserPasswordRequest===void 0)throw new u("resetUserPasswordRequest","Required parameter requestParameters.resetUserPasswordRequest was null or undefined when calling resetPassword.");const r={},i={};if(i["Content-Type"]="application/json",this.configuration&&this.configuration.accessToken){const a=this.configuration.accessToken,o=await a("Authorization",[]);o&&(i.Authorization=`Bearer ${o}`)}const s=await this.request({path:"/users/reset-password",method:"PUT",headers:i,query:r,body:V(e.resetUserPasswordRequest)},n);return this.isJsonMime(s.headers.get("content-type"))?new c(s):new w(s)}async resetPassword(e,n){return await(await this.resetPasswordRaw({resetUserPasswordRequest:e},n)).value()}async sendConfirmationEmailRaw(e,n){if(e.emailId===null||e.emailId===void 0)throw new u("emailId","Required parameter requestParameters.emailId was null or undefined when calling sendConfirmationEmail.");const r={},i={};if(this.configuration&&this.configuration.accessToken){const a=this.configuration.accessToken,o=await a("Authorization",[]);o&&(i.Authorization=`Bearer ${o}`)}const s=await this.request({path:"/users/send-confirmation/{email_id}".replace("{email_id}",encodeURIComponent(String(e.emailId))),method:"PUT",headers:i,query:r},n);return new h(s)}async sendConfirmationEmail(e,n){await this.sendConfirmationEmailRaw({emailId:e},n)}async setPrimaryEmailRaw(e,n){if(e.emailId===null||e.emailId===void 0)throw new u("emailId","Required parameter requestParameters.emailId was null or undefined when calling setPrimaryEmail.");const r={},i={};if(this.configuration&&this.configuration.accessToken){const a=this.configuration.accessToken,o=await a("Authorization",[]);o&&(i.Authorization=`Bearer ${o}`)}const s=await this.request({path:"/users/emails/{email_id}/set-primary-email".replace("{email_id}",encodeURIComponent(String(e.emailId))),method:"PUT",headers:i,query:r},n);return new h(s)}async setPrimaryEmail(e,n){await this.setPrimaryEmailRaw({emailId:e},n)}async usersRaw(e){const n={},r={};if(this.configuration&&this.configuration.accessToken){const s=this.configuration.accessToken,a=await s("Authorization",[]);a&&(r.Authorization=`Bearer ${a}`)}const i=await this.request({path:"/users",method:"GET",headers:r,query:n},e);return new c(i,s=>x(s))}async users(e){return await(await this.usersRaw(e)).value()}}class re extends l{async healthRaw(e){const n={},r={},i=await this.request({path:"/health",method:"GET",headers:r,query:n},e);return new c(i,s=>F(s))}async health(e){return await(await this.healthRaw(e)).value()}async versionRaw(e){const n={},r={},i=await this.request({path:"/version",method:"GET",headers:r,query:n},e);return new c(i,s=>Z(s))}async version(e){return await(await this.versionRaw(e)).value()}}const ie="https://api.auth.aicacia.com",se={middleware:[{pre:async t=>({...t,init:{...t.init,mode:"cors"}})}],credentials:"same-origin"},ae={...se,basePath:typeof __DEV_AUTH_API_URL__<"u"?__DEV_AUTH_API_URL__:ie},p=new R(ae);new re(p);const ce=new te(p),ue=new ne(p),de=new ee(p);function he(t){p.configuration.accessToken=t}export{O as R,de as a,ce as b,he as s,ue as u};
