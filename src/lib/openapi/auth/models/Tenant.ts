/* tslint:disable */
/* eslint-disable */
/**
 * auth
 * Aicacia Auth API provides authentication services for applications.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TenantOAuth2Provider } from './TenantOAuth2Provider';
import {
    TenantOAuth2ProviderFromJSON,
    TenantOAuth2ProviderFromJSONTyped,
    TenantOAuth2ProviderToJSON,
    TenantOAuth2ProviderToJSONTyped,
} from './TenantOAuth2Provider';
import type { Algorithm } from './Algorithm';
import {
    AlgorithmFromJSON,
    AlgorithmFromJSONTyped,
    AlgorithmToJSON,
    AlgorithmToJSONTyped,
} from './Algorithm';

/**
 * 
 * @export
 * @interface Tenant
 */
export interface Tenant {
    /**
     * 
     * @type {Algorithm}
     * @memberof Tenant
     */
    algorithm: Algorithm;
    /**
     * 
     * @type {string}
     * @memberof Tenant
     */
    audience?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Tenant
     */
    clientId: string;
    /**
     * 
     * @type {Date}
     * @memberof Tenant
     */
    createdAt: Date;
    /**
     * 
     * @type {number}
     * @memberof Tenant
     */
    expiresInSeconds: number;
    /**
     * 
     * @type {number}
     * @memberof Tenant
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Tenant
     */
    issuer: string;
    /**
     * 
     * @type {Array<TenantOAuth2Provider>}
     * @memberof Tenant
     */
    oauth2Providers: Array<TenantOAuth2Provider>;
    /**
     * 
     * @type {string}
     * @memberof Tenant
     */
    privateKey?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Tenant
     */
    publicKey?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Tenant
     */
    refreshExpiresInSeconds: number;
    /**
     * 
     * @type {Date}
     * @memberof Tenant
     */
    updatedAt: Date;
}



/**
 * Check if a given object implements the Tenant interface.
 */
export function instanceOfTenant(value: object): value is Tenant {
    if (!('algorithm' in value) || value['algorithm'] === undefined) return false;
    if (!('clientId' in value) || value['clientId'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('expiresInSeconds' in value) || value['expiresInSeconds'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('issuer' in value) || value['issuer'] === undefined) return false;
    if (!('oauth2Providers' in value) || value['oauth2Providers'] === undefined) return false;
    if (!('refreshExpiresInSeconds' in value) || value['refreshExpiresInSeconds'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function TenantFromJSON(json: any): Tenant {
    return TenantFromJSONTyped(json, false);
}

export function TenantFromJSONTyped(json: any, ignoreDiscriminator: boolean): Tenant {
    if (json == null) {
        return json;
    }
    return {
        
        'algorithm': AlgorithmFromJSON(json['algorithm']),
        'audience': json['audience'] == null ? undefined : json['audience'],
        'clientId': json['client_id'],
        'createdAt': (new Date(json['created_at'])),
        'expiresInSeconds': json['expires_in_seconds'],
        'id': json['id'],
        'issuer': json['issuer'],
        'oauth2Providers': ((json['oauth2_providers'] as Array<any>).map(TenantOAuth2ProviderFromJSON)),
        'privateKey': json['private_key'] == null ? undefined : json['private_key'],
        'publicKey': json['public_key'] == null ? undefined : json['public_key'],
        'refreshExpiresInSeconds': json['refresh_expires_in_seconds'],
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function TenantToJSON(json: any): Tenant {
    return TenantToJSONTyped(json, false);
}

export function TenantToJSONTyped(value?: Tenant | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'algorithm': AlgorithmToJSON(value['algorithm']),
        'audience': value['audience'],
        'client_id': value['clientId'],
        'created_at': ((value['createdAt']).toISOString()),
        'expires_in_seconds': value['expiresInSeconds'],
        'id': value['id'],
        'issuer': value['issuer'],
        'oauth2_providers': ((value['oauth2Providers'] as Array<any>).map(TenantOAuth2ProviderToJSON)),
        'private_key': value['privateKey'],
        'public_key': value['publicKey'],
        'refresh_expires_in_seconds': value['refreshExpiresInSeconds'],
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}

