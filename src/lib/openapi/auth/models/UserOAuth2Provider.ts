/* tslint:disable */
/* eslint-disable */
/**
 * auth
 * Aicacia Auth API provides authentication services for applications.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserOAuth2Provider
 */
export interface UserOAuth2Provider {
    /**
     * 
     * @type {Date}
     * @memberof UserOAuth2Provider
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof UserOAuth2Provider
     */
    email?: string | null;
    /**
     * 
     * @type {number}
     * @memberof UserOAuth2Provider
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof UserOAuth2Provider
     */
    provider: string;
    /**
     * 
     * @type {number}
     * @memberof UserOAuth2Provider
     */
    tenantOauth2ProviderId: number;
    /**
     * 
     * @type {Date}
     * @memberof UserOAuth2Provider
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the UserOAuth2Provider interface.
 */
export function instanceOfUserOAuth2Provider(value: object): value is UserOAuth2Provider {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('provider' in value) || value['provider'] === undefined) return false;
    if (!('tenantOauth2ProviderId' in value) || value['tenantOauth2ProviderId'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function UserOAuth2ProviderFromJSON(json: any): UserOAuth2Provider {
    return UserOAuth2ProviderFromJSONTyped(json, false);
}

export function UserOAuth2ProviderFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserOAuth2Provider {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['created_at'])),
        'email': json['email'] == null ? undefined : json['email'],
        'id': json['id'],
        'provider': json['provider'],
        'tenantOauth2ProviderId': json['tenant_oauth2_provider_id'],
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function UserOAuth2ProviderToJSON(json: any): UserOAuth2Provider {
    return UserOAuth2ProviderToJSONTyped(json, false);
}

export function UserOAuth2ProviderToJSONTyped(value?: UserOAuth2Provider | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'created_at': ((value['createdAt']).toISOString()),
        'email': value['email'],
        'id': value['id'],
        'provider': value['provider'],
        'tenant_oauth2_provider_id': value['tenantOauth2ProviderId'],
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}

