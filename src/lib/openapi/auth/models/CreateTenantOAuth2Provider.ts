/* tslint:disable */
/* eslint-disable */
/**
 * auth
 * Aicacia Auth API provides authentication services for applications.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateTenantOAuth2Provider
 */
export interface CreateTenantOAuth2Provider {
    /**
     * 
     * @type {string}
     * @memberof CreateTenantOAuth2Provider
     */
    authUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreateTenantOAuth2Provider
     */
    callbackUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreateTenantOAuth2Provider
     */
    clientId: string;
    /**
     * 
     * @type {string}
     * @memberof CreateTenantOAuth2Provider
     */
    clientSecret: string;
    /**
     * 
     * @type {string}
     * @memberof CreateTenantOAuth2Provider
     */
    provider: string;
    /**
     * 
     * @type {string}
     * @memberof CreateTenantOAuth2Provider
     */
    redirectUrl: string;
    /**
     * 
     * @type {string}
     * @memberof CreateTenantOAuth2Provider
     */
    scope?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreateTenantOAuth2Provider
     */
    tokenUrl?: string | null;
}

/**
 * Check if a given object implements the CreateTenantOAuth2Provider interface.
 */
export function instanceOfCreateTenantOAuth2Provider(value: object): value is CreateTenantOAuth2Provider {
    if (!('clientId' in value) || value['clientId'] === undefined) return false;
    if (!('clientSecret' in value) || value['clientSecret'] === undefined) return false;
    if (!('provider' in value) || value['provider'] === undefined) return false;
    if (!('redirectUrl' in value) || value['redirectUrl'] === undefined) return false;
    return true;
}

export function CreateTenantOAuth2ProviderFromJSON(json: any): CreateTenantOAuth2Provider {
    return CreateTenantOAuth2ProviderFromJSONTyped(json, false);
}

export function CreateTenantOAuth2ProviderFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTenantOAuth2Provider {
    if (json == null) {
        return json;
    }
    return {
        
        'authUrl': json['auth_url'] == null ? undefined : json['auth_url'],
        'callbackUrl': json['callback_url'] == null ? undefined : json['callback_url'],
        'clientId': json['client_id'],
        'clientSecret': json['client_secret'],
        'provider': json['provider'],
        'redirectUrl': json['redirect_url'],
        'scope': json['scope'] == null ? undefined : json['scope'],
        'tokenUrl': json['token_url'] == null ? undefined : json['token_url'],
    };
}

export function CreateTenantOAuth2ProviderToJSON(json: any): CreateTenantOAuth2Provider {
    return CreateTenantOAuth2ProviderToJSONTyped(json, false);
}

export function CreateTenantOAuth2ProviderToJSONTyped(value?: CreateTenantOAuth2Provider | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'auth_url': value['authUrl'],
        'callback_url': value['callbackUrl'],
        'client_id': value['clientId'],
        'client_secret': value['clientSecret'],
        'provider': value['provider'],
        'redirect_url': value['redirectUrl'],
        'scope': value['scope'],
        'token_url': value['tokenUrl'],
    };
}

