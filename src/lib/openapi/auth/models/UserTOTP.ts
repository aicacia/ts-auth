/* tslint:disable */
/* eslint-disable */
/**
 * auth
 * Aicacia Auth API provides authentication services for applications.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserTOTP
 */
export interface UserTOTP {
    /**
     * 
     * @type {string}
     * @memberof UserTOTP
     */
    algorithm: string;
    /**
     * 
     * @type {Date}
     * @memberof UserTOTP
     */
    createdAt: Date;
    /**
     * 
     * @type {number}
     * @memberof UserTOTP
     */
    digits: number;
    /**
     * 
     * @type {string}
     * @memberof UserTOTP
     */
    secret?: string | null;
    /**
     * 
     * @type {number}
     * @memberof UserTOTP
     */
    step: number;
    /**
     * 
     * @type {Date}
     * @memberof UserTOTP
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the UserTOTP interface.
 */
export function instanceOfUserTOTP(value: object): value is UserTOTP {
    if (!('algorithm' in value) || value['algorithm'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('digits' in value) || value['digits'] === undefined) return false;
    if (!('step' in value) || value['step'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function UserTOTPFromJSON(json: any): UserTOTP {
    return UserTOTPFromJSONTyped(json, false);
}

export function UserTOTPFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserTOTP {
    if (json == null) {
        return json;
    }
    return {
        
        'algorithm': json['algorithm'],
        'createdAt': (new Date(json['created_at'])),
        'digits': json['digits'],
        'secret': json['secret'] == null ? undefined : json['secret'],
        'step': json['step'],
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function UserTOTPToJSON(json: any): UserTOTP {
    return UserTOTPToJSONTyped(json, false);
}

export function UserTOTPToJSONTyped(value?: UserTOTP | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'algorithm': value['algorithm'],
        'created_at': ((value['createdAt']).toISOString()),
        'digits': value['digits'],
        'secret': value['secret'],
        'step': value['step'],
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}

