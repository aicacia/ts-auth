/* tslint:disable */
/* eslint-disable */
/**
 * auth
 * Aicacia Auth API provides authentication services for applications.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MFARequestServiceAccount
 */
export interface MFARequestServiceAccount {
    /**
     * 
     * @type {string}
     * @memberof MFARequestServiceAccount
     */
    code: string;
    /**
     * 
     * @type {string}
     * @memberof MFARequestServiceAccount
     */
    type: MFARequestServiceAccountTypeEnum;
}


/**
 * @export
 */
export const MFARequestServiceAccountTypeEnum = {
    ServiceAccount: 'service-account'
} as const;
export type MFARequestServiceAccountTypeEnum = typeof MFARequestServiceAccountTypeEnum[keyof typeof MFARequestServiceAccountTypeEnum];


/**
 * Check if a given object implements the MFARequestServiceAccount interface.
 */
export function instanceOfMFARequestServiceAccount(value: object): value is MFARequestServiceAccount {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function MFARequestServiceAccountFromJSON(json: any): MFARequestServiceAccount {
    return MFARequestServiceAccountFromJSONTyped(json, false);
}

export function MFARequestServiceAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): MFARequestServiceAccount {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'type': json['type'],
    };
}

export function MFARequestServiceAccountToJSON(json: any): MFARequestServiceAccount {
    return MFARequestServiceAccountToJSONTyped(json, false);
}

export function MFARequestServiceAccountToJSONTyped(value?: MFARequestServiceAccount | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'type': value['type'],
    };
}

