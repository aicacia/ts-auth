/* tslint:disable */
/* eslint-disable */
/**
 * auth
 * Aicacia Auth API provides authentication services for applications.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ServiceAccount
 */
export interface ServiceAccount {
    /**
     * 
     * @type {boolean}
     * @memberof ServiceAccount
     */
    active: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ServiceAccount
     */
    admin: boolean;
    /**
     * 
     * @type {string}
     * @memberof ServiceAccount
     */
    clientId: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceAccount
     */
    clientSecret?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof ServiceAccount
     */
    createdAt: Date;
    /**
     * 
     * @type {number}
     * @memberof ServiceAccount
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof ServiceAccount
     */
    name: string;
    /**
     * 
     * @type {Date}
     * @memberof ServiceAccount
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the ServiceAccount interface.
 */
export function instanceOfServiceAccount(value: object): value is ServiceAccount {
    if (!('active' in value) || value['active'] === undefined) return false;
    if (!('admin' in value) || value['admin'] === undefined) return false;
    if (!('clientId' in value) || value['clientId'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function ServiceAccountFromJSON(json: any): ServiceAccount {
    return ServiceAccountFromJSONTyped(json, false);
}

export function ServiceAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceAccount {
    if (json == null) {
        return json;
    }
    return {
        
        'active': json['active'],
        'admin': json['admin'],
        'clientId': json['client_id'],
        'clientSecret': json['client_secret'] == null ? undefined : json['client_secret'],
        'createdAt': (new Date(json['created_at'])),
        'id': json['id'],
        'name': json['name'],
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function ServiceAccountToJSON(json: any): ServiceAccount {
    return ServiceAccountToJSONTyped(json, false);
}

export function ServiceAccountToJSONTyped(value?: ServiceAccount | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'active': value['active'],
        'admin': value['admin'],
        'client_id': value['clientId'],
        'client_secret': value['clientSecret'],
        'created_at': ((value['createdAt']).toISOString()),
        'id': value['id'],
        'name': value['name'],
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}

