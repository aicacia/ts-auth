/* tslint:disable */
/* eslint-disable */
/**
 * auth
 * Aicacia Auth API provides authentication services for applications.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Tenant } from './Tenant';
import {
    TenantFromJSON,
    TenantFromJSONTyped,
    TenantToJSON,
    TenantToJSONTyped,
} from './Tenant';

/**
 * 
 * @export
 * @interface TenantPagination
 */
export interface TenantPagination {
    /**
     * 
     * @type {boolean}
     * @memberof TenantPagination
     */
    hasMore: boolean;
    /**
     * 
     * @type {Array<Tenant>}
     * @memberof TenantPagination
     */
    items: Array<Tenant>;
}

/**
 * Check if a given object implements the TenantPagination interface.
 */
export function instanceOfTenantPagination(value: object): value is TenantPagination {
    if (!('hasMore' in value) || value['hasMore'] === undefined) return false;
    if (!('items' in value) || value['items'] === undefined) return false;
    return true;
}

export function TenantPaginationFromJSON(json: any): TenantPagination {
    return TenantPaginationFromJSONTyped(json, false);
}

export function TenantPaginationFromJSONTyped(json: any, ignoreDiscriminator: boolean): TenantPagination {
    if (json == null) {
        return json;
    }
    return {
        
        'hasMore': json['has_more'],
        'items': ((json['items'] as Array<any>).map(TenantFromJSON)),
    };
}

export function TenantPaginationToJSON(json: any): TenantPagination {
    return TenantPaginationToJSONTyped(json, false);
}

export function TenantPaginationToJSONTyped(value?: TenantPagination | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'has_more': value['hasMore'],
        'items': ((value['items'] as Array<any>).map(TenantToJSON)),
    };
}

