/* tslint:disable */
/* eslint-disable */
/**
 * auth
 * Aicacia Auth API provides authentication services for applications.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateServiceAccount
 */
export interface CreateServiceAccount {
    /**
     * 
     * @type {boolean}
     * @memberof CreateServiceAccount
     */
    admin?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof CreateServiceAccount
     */
    clientId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreateServiceAccount
     */
    clientSecret?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreateServiceAccount
     */
    name: string;
}

/**
 * Check if a given object implements the CreateServiceAccount interface.
 */
export function instanceOfCreateServiceAccount(value: object): value is CreateServiceAccount {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function CreateServiceAccountFromJSON(json: any): CreateServiceAccount {
    return CreateServiceAccountFromJSONTyped(json, false);
}

export function CreateServiceAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateServiceAccount {
    if (json == null) {
        return json;
    }
    return {
        
        'admin': json['admin'] == null ? undefined : json['admin'],
        'clientId': json['client_id'] == null ? undefined : json['client_id'],
        'clientSecret': json['client_secret'] == null ? undefined : json['client_secret'],
        'name': json['name'],
    };
}

export function CreateServiceAccountToJSON(json: any): CreateServiceAccount {
    return CreateServiceAccountToJSONTyped(json, false);
}

export function CreateServiceAccountToJSONTyped(value?: CreateServiceAccount | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'admin': value['admin'],
        'client_id': value['clientId'],
        'client_secret': value['clientSecret'],
        'name': value['name'],
    };
}

