/* tslint:disable */
/* eslint-disable */
/**
 * auth
 * Aicacia Auth API provides authentication services for applications.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { TokenRequestAuthorizationCode } from './TokenRequestAuthorizationCode';
import {
    instanceOfTokenRequestAuthorizationCode,
    TokenRequestAuthorizationCodeFromJSON,
    TokenRequestAuthorizationCodeFromJSONTyped,
    TokenRequestAuthorizationCodeToJSON,
} from './TokenRequestAuthorizationCode';
import type { TokenRequestPassword } from './TokenRequestPassword';
import {
    instanceOfTokenRequestPassword,
    TokenRequestPasswordFromJSON,
    TokenRequestPasswordFromJSONTyped,
    TokenRequestPasswordToJSON,
} from './TokenRequestPassword';
import type { TokenRequestRefreshToken } from './TokenRequestRefreshToken';
import {
    instanceOfTokenRequestRefreshToken,
    TokenRequestRefreshTokenFromJSON,
    TokenRequestRefreshTokenFromJSONTyped,
    TokenRequestRefreshTokenToJSON,
} from './TokenRequestRefreshToken';
import type { TokenRequestServiceAccount } from './TokenRequestServiceAccount';
import {
    instanceOfTokenRequestServiceAccount,
    TokenRequestServiceAccountFromJSON,
    TokenRequestServiceAccountFromJSONTyped,
    TokenRequestServiceAccountToJSON,
} from './TokenRequestServiceAccount';

/**
 * @type TokenRequest
 * 
 * @export
 */
export type TokenRequest = TokenRequestAuthorizationCode | TokenRequestPassword | TokenRequestRefreshToken | TokenRequestServiceAccount;

export function TokenRequestFromJSON(json: any): TokenRequest {
    return TokenRequestFromJSONTyped(json, false);
}

export function TokenRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenRequest {
    if (json == null) {
        return json;
    }
    if (instanceOfTokenRequestAuthorizationCode(json)) {
        return TokenRequestAuthorizationCodeFromJSONTyped(json, true);
    }
    if (instanceOfTokenRequestPassword(json)) {
        return TokenRequestPasswordFromJSONTyped(json, true);
    }
    if (instanceOfTokenRequestRefreshToken(json)) {
        return TokenRequestRefreshTokenFromJSONTyped(json, true);
    }
    if (instanceOfTokenRequestServiceAccount(json)) {
        return TokenRequestServiceAccountFromJSONTyped(json, true);
    }

    return {} as any;
}

export function TokenRequestToJSON(json: any): any {
    return TokenRequestToJSONTyped(json, false);
}

export function TokenRequestToJSONTyped(value?: TokenRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    if (instanceOfTokenRequestAuthorizationCode(value)) {
        return TokenRequestAuthorizationCodeToJSON(value as TokenRequestAuthorizationCode);
    }
    if (instanceOfTokenRequestPassword(value)) {
        return TokenRequestPasswordToJSON(value as TokenRequestPassword);
    }
    if (instanceOfTokenRequestRefreshToken(value)) {
        return TokenRequestRefreshTokenToJSON(value as TokenRequestRefreshToken);
    }
    if (instanceOfTokenRequestServiceAccount(value)) {
        return TokenRequestServiceAccountToJSON(value as TokenRequestServiceAccount);
    }

    return {};
}

