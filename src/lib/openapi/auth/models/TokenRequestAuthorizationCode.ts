/* tslint:disable */
/* eslint-disable */
/**
 * auth
 * Aicacia Auth API provides authentication services for applications.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TokenRequestAuthorizationCode
 */
export interface TokenRequestAuthorizationCode {
    /**
     * 
     * @type {string}
     * @memberof TokenRequestAuthorizationCode
     */
    code: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequestAuthorizationCode
     */
    grantType: TokenRequestAuthorizationCodeGrantTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof TokenRequestAuthorizationCode
     */
    scope?: string | null;
}


/**
 * @export
 */
export const TokenRequestAuthorizationCodeGrantTypeEnum = {
    AuthorizationCode: 'authorization-code'
} as const;
export type TokenRequestAuthorizationCodeGrantTypeEnum = typeof TokenRequestAuthorizationCodeGrantTypeEnum[keyof typeof TokenRequestAuthorizationCodeGrantTypeEnum];


/**
 * Check if a given object implements the TokenRequestAuthorizationCode interface.
 */
export function instanceOfTokenRequestAuthorizationCode(value: object): value is TokenRequestAuthorizationCode {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('grantType' in value) || value['grantType'] === undefined) return false;
    return true;
}

export function TokenRequestAuthorizationCodeFromJSON(json: any): TokenRequestAuthorizationCode {
    return TokenRequestAuthorizationCodeFromJSONTyped(json, false);
}

export function TokenRequestAuthorizationCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenRequestAuthorizationCode {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'grantType': json['grant_type'],
        'scope': json['scope'] == null ? undefined : json['scope'],
    };
}

export function TokenRequestAuthorizationCodeToJSON(json: any): TokenRequestAuthorizationCode {
    return TokenRequestAuthorizationCodeToJSONTyped(json, false);
}

export function TokenRequestAuthorizationCodeToJSONTyped(value?: TokenRequestAuthorizationCode | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'grant_type': value['grantType'],
        'scope': value['scope'],
    };
}

