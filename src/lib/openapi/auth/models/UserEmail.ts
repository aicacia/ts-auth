/* tslint:disable */
/* eslint-disable */
/**
 * auth
 * Aicacia Auth API provides authentication services for applications.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserEmail
 */
export interface UserEmail {
    /**
     * 
     * @type {Date}
     * @memberof UserEmail
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof UserEmail
     */
    email: string;
    /**
     * 
     * @type {number}
     * @memberof UserEmail
     */
    id: number;
    /**
     * 
     * @type {boolean}
     * @memberof UserEmail
     */
    primary: boolean;
    /**
     * 
     * @type {Date}
     * @memberof UserEmail
     */
    updatedAt: Date;
    /**
     * 
     * @type {boolean}
     * @memberof UserEmail
     */
    verified: boolean;
}

/**
 * Check if a given object implements the UserEmail interface.
 */
export function instanceOfUserEmail(value: object): value is UserEmail {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('primary' in value) || value['primary'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('verified' in value) || value['verified'] === undefined) return false;
    return true;
}

export function UserEmailFromJSON(json: any): UserEmail {
    return UserEmailFromJSONTyped(json, false);
}

export function UserEmailFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserEmail {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['created_at'])),
        'email': json['email'],
        'id': json['id'],
        'primary': json['primary'],
        'updatedAt': (new Date(json['updated_at'])),
        'verified': json['verified'],
    };
}

export function UserEmailToJSON(json: any): UserEmail {
    return UserEmailToJSONTyped(json, false);
}

export function UserEmailToJSONTyped(value?: UserEmail | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'created_at': ((value['createdAt']).toISOString()),
        'email': value['email'],
        'id': value['id'],
        'primary': value['primary'],
        'updated_at': ((value['updatedAt']).toISOString()),
        'verified': value['verified'],
    };
}

