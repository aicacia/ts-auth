/* tslint:disable */
/* eslint-disable */
/**
 * auth
 * Aicacia Auth API provides authentication services for applications.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Health,
  Version,
} from '../models/index';
import {
    HealthFromJSON,
    HealthToJSON,
    VersionFromJSON,
    VersionToJSON,
} from '../models/index';

/**
 * UtilApi - interface
 * 
 * @export
 * @interface UtilApiInterface
 */
export interface UtilApiInterface {
    /**
     * 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UtilApiInterface
     */
    healthRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Health>>;

    /**
     */
    health(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Health>;

    /**
     * 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UtilApiInterface
     */
    versionRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Version>>;

    /**
     */
    version(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Version>;

}

/**
 * 
 */
export class UtilApi extends runtime.BaseAPI implements UtilApiInterface {

    /**
     */
    async healthRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Health>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/health`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => HealthFromJSON(jsonValue));
    }

    /**
     */
    async health(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Health> {
        const response = await this.healthRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async versionRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Version>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/version`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => VersionFromJSON(jsonValue));
    }

    /**
     */
    async version(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Version> {
        const response = await this.versionRaw(initOverrides);
        return await response.value();
    }

}
